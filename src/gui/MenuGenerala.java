package gui;

import clases.Dado;
import clases.Generala;
import clases.Jugador;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class MenuGenerala extends JFrame {

    private Generala generala;
    private JPanel panelPrincipal;
    private JButton btnTirar;
    private JLabelDado[] labelDado;
    private JPanel panelDados;
    private JPanel panelPuntos;
    private JTable lTable;

    public MenuGenerala(String titulo, Generala gene) {
        super(titulo);
        this.generala = gene;
        this.setContentPane(panelPrincipal);
        this.pack();
        this.setVisible(true);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setResizable(false);
        iniciarLabelsDado();
        iniciarBotonTirarDados();
        iniciarTable(generala.getJugadores());


    }

    private void iniciarLabelsDado()                //inicializa tod0 el arreglo, setea la imagen inicial y lo agrega al panel de dados
    {
        labelDado = new JLabelDado[5];
        ImageIcon imagen = new ImageIcon("Imagenes\\6.png");
        for (int i = 0; i < 5; i++) {
            labelDado[i] = new JLabelDado();
            labelDado[i].setIcon(imagen);
            panelDados.add(labelDado[i]);
        }
    }

    private void iniciarBotonTirarDados()        //inicializa, setea y agrega al panel de dados
    {
        btnTirar = new JButton("Tirar Dados");
        btnTirar.setMinimumSize(new Dimension(200, 50));
        panelDados.add(btnTirar);
        btnTirar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (generala.getTurno() == 1) {
                    generala.tirarDados();
                }
                //else aca
                else {

                }

                actualizarImagenDados();
            }
        });
    }

    private void actualizarImagenDados() {
        ArrayList<Dado> dados = generala.getDados();
        for (int i = 0; i < 5; i++) {
            labelDado[i].setIcon(dados.get(i).getImagen());
        }
    }

    public void animacionDados() {
        //poner un gif unos segundos al tirar, en lo posible tambien sonido
    }

    private void iniciarTable(ArrayList<Jugador> jugadores) {
        DefaultTableModel tablemodel = new DefaultTableModel(13, jugadores.size() + 1);
        String[] categorias = {"Generala doble", "Generala", "Poker", "Full", "Escalera", "0", "1", "2", "3", "4", "5", "6"};
        int i = 1;
        for (Jugador ju : jugadores) {
            tablemodel.setValueAt(ju.getNombre(), 0, i);
            i++;
        }
        for (i = 1; i < 13; i++) {
            tablemodel.setValueAt(categorias[i - 1], i, 0);
        }
        lTable.setModel(tablemodel);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelPrincipal = new JPanel();
        panelPrincipal.setLayout(new FlowLayout(FlowLayout.CENTER, 20, 30));
        panelPrincipal.setBackground(new Color(-16170752));
        panelPrincipal.setMaximumSize(new Dimension(1150, 580));
        panelPrincipal.setMinimumSize(new Dimension(1150, 580));
        panelPrincipal.setPreferredSize(new Dimension(1150, 580));
        panelDados = new JPanel();
        panelDados.setLayout(new FlowLayout(FlowLayout.CENTER, 40, 49));
        panelDados.setAlignmentX(0.5f);
        panelDados.setBackground(new Color(-16170752));
        panelDados.setMaximumSize(new Dimension(460, 470));
        panelDados.setMinimumSize(new Dimension(460, 470));
        panelDados.setPreferredSize(new Dimension(460, 470));
        panelPrincipal.add(panelDados);
        panelPuntos = new JPanel();
        panelPuntos.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panelPuntos.setBackground(new Color(-16170752));
        panelPuntos.setMaximumSize(new Dimension(600, 452));
        panelPuntos.setMinimumSize(new Dimension(600, 452));
        panelPuntos.setOpaque(false);
        panelPuntos.setPreferredSize(new Dimension(600, 452));
        panelPrincipal.add(panelPuntos);
        lTable = new JTable();
        lTable.setAutoResizeMode(4);
        lTable.setBackground(new Color(-16170752));
        lTable.setCellSelectionEnabled(false);
        lTable.setColumnSelectionAllowed(false);
        lTable.setFillsViewportHeight(false);
        Font lTableFont = this.$$$getFont$$$(null, -1, 16, lTable.getFont());
        if (lTableFont != null) lTable.setFont(lTableFont);
        lTable.setForeground(new Color(-16777216));
        lTable.setGridColor(new Color(-16777216));
        lTable.setMaximumSize(new Dimension(605, 465));
        lTable.setMinimumSize(new Dimension(605, 465));
        lTable.setOpaque(true);
        lTable.setPreferredScrollableViewportSize(new Dimension(0, 0));
        lTable.setPreferredSize(new Dimension(605, 465));
        lTable.setRowHeight(35);
        lTable.setRowMargin(0);
        lTable.putClientProperty("JTable.autoStartsEdit", Boolean.FALSE);
        panelPuntos.add(lTable);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelPrincipal;
    }
}
